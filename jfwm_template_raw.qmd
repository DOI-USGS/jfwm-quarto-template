---
title: "Quarto template for the _Journal of Fish and Wildlife Management_"
thanks: This draft manuscript is distributed solely for purposes of scientific peer review. Its content is deliberative and predecisional, so it must not be disclosed or released by reviewers. Because the manuscript has not yet been approved for publication by the U.S. Geological Survey (USGS), it does not represent any official USGS finding or policy.
author: "**Richard A. Erickson,* Althea A. Archer, Michael N. Fienen**"
date: today
format:
  docx: 
    fig-cap-location: bottom
    keep-tex: true
    number-sections: true
    reference-doc: jfwm_template_template.docx

csl: council-of-science-editors-author-date.csl 
bibliography: references.bib
header-includes:
  \usepackage{setspace}\doublespacing
  \usepackage{lineno} \linenumbers

editor_options: 
  markdown: 
    wrap: sentence
---

<!-- Note the use of two spaces to form a list without indents, from  -->
<!-- https://stackoverflow.com/questions/32474227/lists-without-bullets-points-in-markdown -->

**R.A. Erickson**  
U.S. Geological Survey, Upper Midwest Environmental Sciences Center, La Crosse, WI  
**A.A. Archer**  
U.S. Geological Survey, Water Resources Mission Area, Reston, VA  
**M.N. Fienen**  
U.S. Geological Survey, Upper Midwest Water Science Center, Madison, WI  
*Corresponding author: (rerickson@usgs.gov)  


# Abstract {.unnumbered}

To do:

- [ ] Finish repo metadata, including readme, license, etc.
- [ ] Finish writing first draft of this document

**Keywords:** Findability, Accessibility, Interoperability, and Reuse (FAIR); markdown; reproducible science; journal template; Quarto

# Introduction  {.unnumbered}

Modern computing tools can allow scientists and practitioners to be more efficient, transparent, and reproducible [@Braga_2023; @Erickson_2021].
For example, ecologists are moving away from point-and-click statistical methods to using scripting languages with code [@borregaard2016towards].
These changes not only make scientists more productive, but confer additional benefits.
First, using scripting allows the ready reuse of methods by their creator.
For example, scientists commonly conduct the same or similar analyses on a regular basis [such as @usfws2023].
Thus, scripting allows methods to be easily adapted and often quickly rerun with minimal formatting.
Second, sharing the code allows others to reuse methods and also recreate results when data are shared as well.

The broader scientific community has begun to increasingly see the importance of reproducible results because of a perception of a reproducibility crisis exists, across scientific fields [@Baker_2016; @fanelli2018science].
Thus, scientists increasingly seek to produce reproducible results, especially for computationally intensive projects [@borregaard2016towards].
This lack reproducibility also occurs in natural resource fields [such as wildlife research published in the _Journal of Wildlife Management_ and descrbed by @Archmiller_2020].
Others have provided suggestions and methods for creating reproducible results in natural resource and related fields [such as @Braga_2023; @borregaard2016towards].
Additionally, Findability, Accessibility, Interoperability, and Reuse (commonly known as "FAIR" by the organizers) principles exist to help scientists share and produce reproducible science [@Reiser_2018].
Likewise, professional societies and government agencies have produced guidelines for reproducible science and Table 1 of @Erickson_2021 lists example organizations including professional societies and governmental agencies.

While many scientists now use scripting languages for their statistical method [for example, see Figure 2 of @Erickson_2020 who found that a plurality of authors in an the journal _Environmental Toxicology and Chemistry_ use R], we have observed that fewer scientists use similar tools for writing manuscripts.
However, similar tools to scripting languages for statistics (such as Python or R), other tools exist that allow scientist to more efficiently write manuscript that are Markdown-based [@baumer2015r].
These writing tools can be especially powerful when embedded with code and released, but also include additional benefits.
@baumer2015r note that Markdown-based programs such as `R Markdown` and `Quarto` offer advantages over LaTeX, Word, or HTML for the author.
These include simplicity, readability, transparency, and embedded computation.  

On a more personal note, we have observed interest in Markdown-based writing documents from our colleague and collaborators.
For example, a U.S. Geological Survey Markdown Community of Practice exists and all of the authors have presented tutorials to this group.
Additionally, this group includes members from the U.S. Fish and Wildlife.
We have also observed conservations about using Markdown-based writing tools in online conversations such as the U.S. Fish and Wildlife Service's "Great Lakes R Working Group".

For readers who unfamiliar with Markdown-based writings tools, we provide a brief history here.
Stanford University computer scientist Donald Knuth had trouble typesetting his mathematical equations in the late-1970s and early-1980s and this led him to create the TeX language [@knuth1984tex].
Leslie Lamport create LaTeX as a set of macros to make TeX easier to use [@lamport1985latex].
Statistics sought to easily embed statistical code with LaTeX documents.
At the time, the S-language (the language upon which R is based) was popular so the program Sweave was created to "weave" S with LaTeX [@Leisch_2002].
While brilliant in theory, we have observed that Tex, LaTeX, and Sweave all can be complicated to use and Sweave can be especially cumbersome to use because it requires the source file to be complied multiple times.
Others noted these difficulties as well and Yihui Xie and others to create a Markdown-based program for use with R, R Markdown [@Xie_2018], that overcomes many of these limitations.
The popularity of R Markdown led Yihui Xie and others to create a more general program that works natively with many languages rather than only R, Quarto [@Allaire2022].

The remaining purpose of our paper is to present our Quarto template for this journal [@erickson2023quarto].
We demonstrate useful some useful features including how to include figures, tables, and the `quarto-utils` package for automatic bibliography generation.
We also discuss how these tools may be applied to other situations.
Although our examples tend to focus on R, Quarto works with many languages.

# Methods {.unnumbered}

## Quarto workflow {.unnumbered}

* Quarto [@fig-quarto]
  - write a Markdown file with `.qmd` extensions
  - Header contains the metadata in yml format, minimal customization needed for this template
  - Template file is `jfwm_template_template.docx`
  - User simply renders file
    - Posit's RStudio likely easiest program
    - Visual Studio Code another easy editor
    - Command line a third option
  - End results is a Word `.docx` file
  - Intermediate step involves a Markdown file (`md`) but not germane to our example 
* Journal pipeline for us (Table 1)

* Purpose of this manuscript
  * Present a template for JFWM using Quarto
  * Demonstrate some useful features: table creation and `quarto-utils` package
  * Examples tend to focus on R, but Quarto works with many languages. In fact, one of the authors does not use R at all.

# Materials and Methods

* Quarto [@fig-qurto]
* `Quarto-utils` Python package
* Tables with R and Python
* Inline code with R (currently underdevelopment with Python https://github.com/quarto-dev/quarto-cli/pull/6190)

## Background knowledge

* Basic Markdown

## Specific steps

1. Write document.
2. Optionally, include code or call code through `knitr::read_chunk()` 
Table 1.

# Results

We have demonstrated how to use Quarto to prepare manuscript for the _Journal of Fish and Wildlife Management_.
This includes Figures (such as @fig-qurto) and Tables (Such as Table 1 and Table 2).

We have also described the co-authors random links to the upper Midwest (Table 2).
The main purpose of this sentence sentence is to be a placeholder to demonstrate the second paragraph and the related indentation. 

# Discussion {.unnumbered}

* Reproducible methods such as Quarto can help science through following principles such as FAIR
  * USGS uses FAIR principles as part of their roadmap @lightsom2022opportunities
  * Likewise, FWS uses FAIR principles [@usfws2023budget]
* Ideally, if a manuscript submitted to JFWM using this manuscript gets denied (gasp!), fairly easy to modify format to other journal requirements
* Pragmatically, helps author be more efficient and avoid formatting of word documents

# Conflict of Interest {.unnumbered}

The authors report no conflicts of interest.

# Acknowledgments {.unnumbered}

We thank the U.S. Geological Survey Biological Threats and Invasive Species Research Program for funding.
Any use of trade, firm, or product names is for descriptive purposes only and does not imply endorsement by the U.S. Government.
The findings and opinions expressed in this manuscript are those of the authors and do not necessarily represent the views of the US Fish and Wildlife Service.

# Data availability {.unnumbered}


# Figures {.unnumbered}

![Exampe of quarto workflow.](./quarto.jpg){#fig-qurto}


# Tables {.unnumbered}

Table 1: Steps to use the Quarto template associated with this manuscript with the _Journal of Fish and Wildlife Management_.

```{r}
#| message: false
#| warning: false
#| error: false
#| echo: false
#| eval: true
library(tidyverse)
library(flextable)

## From https://www.reddit.com/r/rstats/comments/11ywud9/how_do_you_get_perfect_tables_for_microsoft_word/
# Function to have tables autofit to page
FitFlextableToPage <- function(ft, pgwidth = 6.5){
  # set as autofit to make width parameters adjustable
  ft_out <- ft %>% autofit()
  # set width as function of page width
  ft_out <- width(ft_out,
                  width = dim(ft_out)$widths * pgwidth /
                    (flextable_dim(ft_out)$widths))
  return(ft_out)
}

steps_tib <- tibble(
  order = c(1, 2, "3 (optional)", 4, 5),
  step = c("Obtain template from DOI",
           "Write your text using Markdown",
           "Run Python script to populate bibliography file",
           "Break Quarto-Word link and do final formatting manually",
           "Submit to _Journal of Fish and Wildlife Management_"))
steps_tib |>
  flextable() |>
  theme_booktabs() |>
  FitFlextableToPage()
```

Table 2: Author trivia to demonstrate a table. The table awkwardly includes wide and long form data to demonstrate how to use the `flextable` package.

```{r}
#| message: false
#| warning: false
#| error: false
#| echo: false
#| eval: true

data <-
  tibble(Author = c("RAE", "RAE", "RAE", "AAA", "MNF"),
         Intership = c("University of Minnesota", "--", "--",
                       "University of Minnesota", "--"),
         Undergraduate = c("--", "--", "--", "Gustavus Adolphus", "Macalester"),
         "Univeristy of Wisconsin (UW) System" =
           c("Undergraduate, UW-Stevens Point",
             "Internship, UW-Madison",
             "Graduate facutly, UW-La Crosse",
             "Graduate Certificate, UW-Madison",
             "Graduate facutly, UW-Madison"))

data |>
  flextable() |>
  theme_booktabs() |>
  add_header_row(
    colwidths = c(1, 2, 1),
    values = c("",
               "Minnesota Connection", "Wisconsin Acadmeic Connection")) |>
  merge_v(j = ~Author) |>
  FitFlextableToPage()
```

# Supplemental Material {.unnumbered}

**Supplement S1**  U.S. Fish and Wildlife Service. 2023a. Waterfowl population status, 2023. U.S. Department of the Interior, Washington, D.C. USA.  
**Supplement S2** U.S. Fish and Wildlife Service. 2023b. Budget justifications and performance information fiscal year 2024. U.S. Department of the Interior, Washington, D.C. USA.




# References {.unnumbered}